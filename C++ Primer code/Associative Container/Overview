#include <iostream>
#include <string>
#include <list>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <utility>

using namespace std;

pair<string, int> MakePair(const string s, const int i) {
    if(i % 3 == 0) {
        return pair<string, int>(s, i);
    }
    else if(i % 3 == 1) {
        return make_pair(s, i);
    }
    else {
        return {s, i};
    }
}

int main()
{
    map<string, size_t> word_count;
    string word;
    set<string> exclude = {"the", "and", "an", "a", "but", "or"};
    while(cin >> word && word != "quit") {
        for(auto c : word) {
            tolower(c);
        }
        if(exclude.find(word) == exclude.end()) {  // To ignore the words in the set
            ++word_count[word];
        }
    }
    for(const auto &w : word_count) {
        cout << w.first << " occurs " << w.second
             << ((w.second > 1) ? " times " : " time ") << endl;
    }

    map<string, string> Players = { {"Michael", "Jordan"},
                                    {"Lebron", "James"},
                                    {"Kobe", "Bryant"} };

    pair<string, string> author{"James", "Joyce"};
    cout << author.first << " " << author.second << endl;

    vector<int> vec{1,2,3,4,5,6};
    vector<string> vs{"a","b","c","d","e","f"};
    vector<pair<string, int>> vp;

    auto it1 = vec.begin();
    auto it2 = vs.begin();
    while(it1 != vec.end()) {
        vp.push_back(MakePair(*it2++, *it1++));
    }
    for(const auto &p : vp) {
        cout << p.first << " " << p.second << endl;
    }



    return 0;
}
