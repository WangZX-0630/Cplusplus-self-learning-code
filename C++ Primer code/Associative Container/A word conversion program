#include <iostream>
#include <fstream>
#include <sstream>
#include <string>
#include <map>
#include <algorithm>

using namespace std;

map<string, string> buildMap(ifstream &map_file) {
    map<string, string> trans_map;
    string key;
    string value;
    while(map_file >> key && getline(map_file, value)) {
        trans_map.insert(make_pair(key, value));
    }
    return trans_map;
}

const string &transform(const string &s, const map<string, string> &m) {
    auto map_iter = m.find(s);
    if(map_iter != m.cend())
        return map_iter->second;
    else
        return s;
}

void word_transform(ifstream &map_file, ifstream &input) {
    auto trans_map = buildMap(map_file);
    string text;
    while(getline(input, text)) {
        istringstream stream(text);
        string word;
        bool firstWord = true;
        while(stream >> word) {
            if(firstWord)
                firstWord = false;
            else
                cout << " ";
            cout << transform(word, trans_map);
        }
        cout << endl;
    }
}

int main()
{
    ifstream map_file("bfile.dat");
    ifstream input("cfile.dat");
    word_transform(map_file, input);

    return 0;
}
