#include <string>

using namespace std;

class HasPtr
{
public:
    explicit HasPtr(const string &s = string()) : 
                    ps(new string(s)), i(0), use(new size_t(1)) { }
    HasPtr(const HasPtr& hp) : 
           ps(hp.ps), i(hp.i), use(hp.use) { ++*use; }
    HasPtr& operator=(const HasPtr& hp);
    ~HasPtr();
private:
    string *ps;
    int i;
    size_t *use;
};

HasPtr& HasPtr::operator=(const class HasPtr & hp) {
    ++*hp.use;
    if(--*use == 0) {
        delete use;
        delete ps;
    }
    ps = hp.ps;
    use = hp.use;
    i = hp.i;
    return *this;
}

HasPtr::~HasPtr() {
    if(--*use == 0) {
        delete ps;
        delete use;
    }
}
